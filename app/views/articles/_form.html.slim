= simple_form_for(@article) do |f|
  = f.error_notification
  = f.error_notification message: f.object.errors[:base].to_sentence if f.object.errors[:base].present?

  .form-inputs
    .d-flex
      = f.input :name, as: :string, wrapper_html: { class: "expand mr-3" }
      = f.input :slug, as: :string
    = f.input :time_to_read
    = f.input :preview, hint: "do not use h1, h2, h3 headings"
    = f.input :content, hint: "do not use h1 heading"
    = f.input :title, as: :string, input_html: { value: @article[:title] }
    = f.input :description, as: :string, input_html: { value: @article[:description] }
    = f.input :keywords, as: :string, input_html: { value: @article[:keywords] }
    = f.input :image
    = f.association :category
    = f.association :tags, as: :check_boxes, label_method: :name

  .form-actions
    = f.button :submit, class: "btn btn-primary", value: "Сохранить"

hr

.h3 Комментарии:
#article-comments
  = render partial: 'comments/comment', collection: @article.comments, locals: { admin: true }

.h3 Добавить комментарий
= simple_form_for @article.comments.new, remote: true do |ff|
  = ff.input_field :article_id, value: @article.id, type: :hidden
  = ff.input :username
  = ff.input :avatar
  = ff.input :content
  = ff.button :submit, class: "btn-primary btn"
